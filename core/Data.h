#pragma once
class block
{
private:
	void clear()//Clear the matrix of tetermino
	{
		for (int i = 0; i < 5; i++)
		{
			for (int j = 0; j < 5; j++)
			{
				arr[i][j] = 0;
			}
		}
	}
public:
	int n = 0;
	int r = 0;
	int arr[5][5];
	Scalar color;
	void create(int k) 
	{
		r = 0;
		n = k;
		clear();
		color = tetrimino_color(k);
		if (n == 0) 
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 1)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 1; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 2)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 1; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 3)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 4)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 5)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
		if (n == 6)
		{
			arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
			arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
			arr[0][2] = 1; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
			arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
			arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
		}
	}
	void rotate()
	{
		if (n == 0)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			}break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 2;
			}break;
			case 2:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 3;
			}break;
			case 3:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			}break;
			}
		}
		if (n == 1)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			}break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 1; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 2;
			}break;
			case 2:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 1; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 3;
			}break;
			case 3:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 1; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			}break;
			}
		}
		if (n == 2)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 1; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			}break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 1; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			}break;
			}
		}
		if (n == 4)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 1; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			}break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			}break;
			}
		}
		if (n == 5)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 1; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			}break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 1; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 2;
			}break;
			case 2:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 1; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 3;
			}break;
			case 3:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 1; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			}break;
			}
		}
		if (n == 6)
		{
			switch (r)
			{
			case 0:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 1; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 1; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 0; arr[1][2] = 0; arr[2][2] = 1; arr[3][2] = 0; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 1; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 1;
			} break;
			case 1:
			{
				arr[0][0] = 0; arr[1][0] = 0; arr[2][0] = 0; arr[3][0] = 0; arr[4][0] = 0;
				arr[0][1] = 0; arr[1][1] = 0; arr[2][1] = 0; arr[3][1] = 0; arr[4][1] = 0;
				arr[0][2] = 1; arr[1][2] = 1; arr[2][2] = 1; arr[3][2] = 1; arr[4][2] = 0;
				arr[0][3] = 0; arr[1][3] = 0; arr[2][3] = 0; arr[3][3] = 0; arr[4][3] = 0;
				arr[0][4] = 0; arr[1][4] = 0; arr[2][4] = 0; arr[3][4] = 0; arr[4][4] = 0;
				r = 0;
			} break;
			}
		}
	}

	
};
class matrix
{
public:
	int el[10][30]={0};
	int previous_position[10][30] = { 0 };
	Scalar color[10][30];
	void clear_previous_position()
	{
		for (int i = 0; i < 10; i++)
		{
			for (int j = 0; j < 30; j++)
			{
				previous_position[i][j] = 0;
			}
		}
	}
	void clear_previous_el()
	{
		for (int i = 0; i < 10; i++)
		{
			for (int j = 0; j < 30; j++)
			{
				if (previous_position[i][j] == 1) { el[i][j] = 0; }
			}
		}
		clear_previous_position();
	}
};